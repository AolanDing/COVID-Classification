Model created, config:
{'name': 'tf_efficientnetv2_l', 'backbone_name': 'tf_efficientnetv2_l', 'backbone_args': {'drop_path_rate': 0.2}, 'backbone_indices': None, 'image_size': [512, 512], 'num_classes': 2, 'min_level': 3, 'max_level': 7, 'num_levels': 5, 'num_scales': 3, 'aspect_ratios': [[1.0, 1.0], [1.4, 0.7], [0.7, 1.4]], 'anchor_scale': 4.0, 'pad_type': 'same', 'act_type': 'swish', 'norm_layer': None, 'norm_kwargs': {'eps': 0.001, 'momentum': 0.01}, 'box_class_repeats': 3, 'fpn_cell_repeats': 3, 'fpn_channels': 88, 'separable_conv': True, 'apply_resample_bn': True, 'conv_bn_relu_pattern': False, 'downsample_type': 'max', 'upsample_type': 'nearest', 'redundant_bias': True, 'head_bn_level_first': False, 'head_act_type': None, 'fpn_name': None, 'fpn_config': None, 'fpn_drop_path_rate': 0.0, 'alpha': 0.25, 'gamma': 1.5, 'label_smoothing': 0.0, 'legacy_focal': False, 'jit_loss': False, 'delta': 0.1, 'box_loss_weight': 50.0, 'soft_nms': False, 'max_detection_points': 5000, 'max_det_per_image': 100, 'url': ''}
Sanity Checking: 0it [00:00, ?it/s]
GPU available: False, used: False
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
  | Name  | Type          | Params
----------------------------------------
0 | model | DetBenchTrain | 116 M
----------------------------------------
116 M     Trainable params
0         Non-trainable params
116 M     Total params


Sanity Checking DataLoader 0:  10%|███▌                                | 1/10 [00:06<00:56,  6.30s/it]
/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/pytorch_lightning/utilities/data.py:85: UserWarning: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 2. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.














Epoch 0:   0%| | 5/1220 [04:35<18:36:05, 55.12s/it, loss=703, v_num=w9ay, train_loss_step=648.0, train
Traceback (most recent call last):
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/pytorch_lightning/trainer/call.py", line 38, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 645, in _fit_impl
    self._run(model, ckpt_path=self.ckpt_path)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1098, in _run
    results = self._run_stage()
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1177, in _run_stage
    self._run_train()
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1200, in _run_train
    self.fit_loop.run()
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/pytorch_lightning/loops/loop.py", line 199, in run
    self.advance(*args, **kwargs)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/pytorch_lightning/loops/fit_loop.py", line 267, in advance
    self._outputs = self.epoch_loop.run(self._data_fetcher)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/pytorch_lightning/loops/loop.py", line 199, in run
    self.advance(*args, **kwargs)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/pytorch_lightning/loops/epoch/training_epoch_loop.py", line 214, in advance
    batch_output = self.batch_loop.run(kwargs)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/pytorch_lightning/loops/loop.py", line 199, in run
    self.advance(*args, **kwargs)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/pytorch_lightning/loops/batch/training_batch_loop.py", line 88, in advance
    outputs = self.optimizer_loop.run(optimizers, kwargs)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/pytorch_lightning/loops/loop.py", line 199, in run
    self.advance(*args, **kwargs)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/pytorch_lightning/loops/optimization/optimizer_loop.py", line 200, in advance
    result = self._run_optimization(kwargs, self._optimizers[self.optim_progress.optimizer_position])
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/pytorch_lightning/loops/optimization/optimizer_loop.py", line 247, in _run_optimization
    self._optimizer_step(optimizer, opt_idx, kwargs.get("batch_idx", 0), closure)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/pytorch_lightning/loops/optimization/optimizer_loop.py", line 357, in _optimizer_step
    self.trainer._call_lightning_module_hook(
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1342, in _call_lightning_module_hook
    output = fn(*args, **kwargs)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/pytorch_lightning/core/module.py", line 1661, in optimizer_step
    optimizer.step(closure=optimizer_closure)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/pytorch_lightning/core/optimizer.py", line 169, in step
    step_output = self._strategy.optimizer_step(self._optimizer, self._optimizer_idx, closure, **kwargs)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/pytorch_lightning/strategies/strategy.py", line 234, in optimizer_step
    return self.precision_plugin.optimizer_step(
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/pytorch_lightning/plugins/precision/precision_plugin.py", line 121, in optimizer_step
    return optimizer.step(closure=closure, **kwargs)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/torch/optim/optimizer.py", line 140, in wrapper
    out = func(*args, **kwargs)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/torch/optim/adamw.py", line 120, in step
    loss = closure()
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/pytorch_lightning/plugins/precision/precision_plugin.py", line 107, in _wrap_closure
    closure_result = closure()
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/pytorch_lightning/loops/optimization/optimizer_loop.py", line 147, in __call__
    self._result = self.closure(*args, **kwargs)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/pytorch_lightning/loops/optimization/optimizer_loop.py", line 133, in closure
    step_output = self._step_fn()
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/pytorch_lightning/loops/optimization/optimizer_loop.py", line 406, in _training_step
    training_step_output = self.trainer._call_strategy_hook("training_step", *kwargs.values())
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 1480, in _call_strategy_hook
    output = fn(*args, **kwargs)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/pytorch_lightning/strategies/strategy.py", line 378, in training_step
    return self.model.training_step(*args, **kwargs)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/models/EfficientDet.py", line 144, in training_step
    losses = self.model(images, annotations)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/effdet/bench.py", line 133, in forward
    class_out, box_out = self.model(x)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/effdet/efficientdet.py", line 602, in forward
    x = self.backbone(x)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/timm/models/efficientnet.py", line 611, in forward
    x = b(x)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/torch/nn/modules/container.py", line 204, in forward
    input = module(input)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/timm/models/efficientnet_blocks.py", line 185, in forward
    x = self.se(x)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/timm/models/efficientnet_blocks.py", line 56, in forward
    return x * self.gate(x_se)
KeyboardInterrupt
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/run.py", line 37, in <module>
    train_save(config, args.wandb)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/run.py", line 24, in train_save
    trainer.fit(model, loader)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/pytorch_lightning/trainer/trainer.py", line 603, in fit
    call._call_and_handle_interrupt(
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/pytorch_lightning/trainer/call.py", line 48, in _call_and_handle_interrupt
    rank_zero_warn("Detected KeyboardInterrupt, attempting graceful shutdown...")
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/lightning_utilities/core/rank_zero.py", line 24, in wrapped_fn
    return fn(*args, **kwargs)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/lightning_utilities/core/rank_zero.py", line 61, in rank_zero_warn
    _warn(message, stacklevel=stacklevel, **kwargs)
  File "/Users/mt361/Desktop/COVID_CV/COVID-Classification/venv/lib/python3.9/site-packages/lightning_utilities/core/rank_zero.py", line 55, in _warn
    warnings.warn(message, stacklevel=stacklevel, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/warnings.py", line 112, in _showwarnmsg
    _showwarnmsg_impl(msg)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/warnings.py", line 28, in _showwarnmsg_impl
    text = _formatwarnmsg(msg)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/warnings.py", line 128, in _formatwarnmsg
    return _formatwarnmsg_impl(msg)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/warnings.py", line 42, in _formatwarnmsg_impl
    line = linecache.getline(msg.filename, msg.lineno)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/linecache.py", line 30, in getline
    lines = getlines(filename, module_globals)
  File "/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/linecache.py", line 36, in getlines
    def getlines(filename, module_globals=None):
KeyboardInterrupt